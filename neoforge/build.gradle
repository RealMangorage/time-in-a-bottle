plugins {
    id 'multiloader-loader'
    id 'net.neoforged.gradle.userdev' version '7.0.+'
    id "com.modrinth.minotaur" version "2.+"
}

// Automatically enable neoforge AccessTransformers if the file exists
// This location is hardcoded in FML and can not be changed.
// https://github.com/neoforged/FancyModLoader/blob/a952595eaaddd571fbc53f43847680b00894e0c1/loader/src/main/java/net/neoforged/fml/loading/moddiscovery/ModFile.java#L118

def at = file('src/main/resources/META-INF/accesstransformer.cfg')

if (at.exists()) {
    minecraft.accessTransformers.file at
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        //programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = uri("https://maven.terraformersmc.com/")
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    // EMI
    compileOnly "dev.emi:emi-xplat-mojmap:$emi_version+$minecraft_version:api"
    if (RUN_EMI == "true") {
        runtimeOnly "dev.emi:emi-neoforge:$emi_version+$minecraft_version"
    }

    // JEI
    compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    if (RUN_JEI == "true") {
        runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")
    }
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    group "modpublishing"
    apiToken = findProperty('curseforge_token')

    def projectId = 895919
    def mainFile = upload(projectId, jar)

    mainFile.changelog = changelog
    mainFile.addOptional("jei") // JEI
    mainFile.addOptional("emi") // EMI
    mainFile.displayName = "Time in a bottle NeoForge " + project.version
}

tasks.getByName("modrinth").setGroup("modpublishing")

modrinth {
    token = findProperty("modrinth_token") // Remember to have the MODRINTH_TOKEN environment variable set or else this will fail - just make sure it stays private!

    projectId = "time-in-a-bottle-universal" // This can be the project ID or the slug. Either will work!
    versionNumber = project.version // You don't need to set this manually. Will fail if Modrinth has this version already
    versionName = "Time in a bottle Neoforge " + project.version
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    uploadFile = jar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["$minecraft_version"] // Must be an array, even with only one version
    loaders = ["neoforge"]
    changelog = project.changelog
    dependencies {
        optional.project "jei"
        optional.project 'emi'
    }
}